#!/usr/bin/env rc

fn usage {
	echo 'usage: '^`{basename $0}^' OPTION|COMMAND
Options and commands:
	-h, help        show this help message
	-l, list        list acme-lsp services
	-s, start       start acme-lsp services
	-S, stop        stop acme-lsp services
	-t, status      show status of acme-lsp services
	-r, restart     restart acme-lsp services
	-L, load        load acme-lsp services
	-u, unload      unload acme-lsp services
	-T, tail        tail acme-lsp log files
	-p, plist       show paths to property list files
	-c, truncate    truncate log files
	-o, logs        show paths to log files'
	exit 1
}

fn list {
	launchctl list | grep 'p9.org.acme'
}

fn load {
	x = `{list}
	if(~ $#x 0){
		launchctl load -w $home/Library/LaunchAgents/p9.org.acme-lsp.plist
	}
}

fn unload {
	x = `{list}
	if(~ $#x 1){
		launchctl unload -w $home/Library/LaunchAgents/p9.org.acme-lsp.plist
	}
}

fn status {
	launchctl list p9.org.acme-lsp | awk '/PID/ { gsub(";",""); print $3 }'
}

fn propertylists {
	launchctl dumpstate | grep 'path = .*p9.org.acme.*.plist$' | 9 ssam 's/^.* = //g'
}

fn showlogs {
	for(p in `{propertylists}) {
		logs=`{grep '\.log' $p | awk -F '[<|>]' '{print $3}'}
		for(l in $logs) {
			echo $l
		}
	}
}

fn restart {
	for(p in `{list}) {
		launchctl stop $p
		launchctl start $p
	}
}

fn stop {
	for(p in `{list}) {
		launchctl stop $p
	}
}

fn start {
	# Ensure log directories exist
	logdirs = `{acme-lsp -showconfig | egrep 'StderrFile|LogFile' | sed 's/.*= "//;s/\/[^/]*$//;s/"$//' | sort | uniq}

	switch($#logdirs) {
	case 0
		echo 'No log directories found in acme-lsp config'
	case 1
		if(! test -d $logdirs) {
			mkdir -p $logdirs
		}
	case *
		for(dir in $logdirs) {
			if(! test -d $dir) {
				mkdir -p $dir
			}
		}
	}

	for(p in `{list}) {
		launchctl start $p
	}
}

fn truncatelogs {
	for(p in `{propertylists}) {
		# Extract log files from .plist launch agent definition:
		#
		#  <key>StandardOutPath</key>
		#  <string>/usr/local/var/log/9lab/acmefocused.out.log</string>
		#  <key>StandardErrorPath</key>
		#  <string>/usr/local/var/log/9lab/acmefocused.err.log</string>
		#
		logs=`{grep '\.log' $p | awk -F '[<|>]' '{print $3}'}
		for(l in $logs) {
			echo 'Truncating log file: "'^$l^'"'
			>$l
		}
	}
}

fn tail {
	for (log in `{showlogs}) {
		if(~ $#log 1 && test -f $log) {
			echo "****** $log ******"
			9 tail -10 $log
		}
	}
}

if(~ `{uname -o} Linux linux) {
	echo "This script is for use only in macOS"
	exit 1
}

if(~ $#* 0) {
	usage
}

cmd=$1
shift

switch($cmd) {
case -h help
	usage
case -l list
	list
case -s start
	start
case -S stop
	stop
case -t status
	status
case -r restart
	restart
case -L load
	load
case -u unload
	unload
case -T tail
	tail
case -c truncate
	truncatelogs
case -p plist
	propertylists
case -o logs
	showlogs
case *
	usage
}
