#!/usr/bin/env bash

set -e

usage() {
    echo "Usage: csc FLAG|COMMAND symbol"
    echo "Flags and commands:"
    echo "  -s, symbol      Find this C symbol"
    echo "  -g, global      Find this global definition"
    echo "  -b, calledby    Find functions called by this function"
    echo "  -c, calling     Find functions calling this function"
    echo "  -t, text        Find this text string"
    echo "  -C, change      Change this text string"
    echo "  -p, pattern     Find this egrep pattern"
    echo "  -f, file        Find this file"
    echo "  -i, including   Find files #including this file"
    echo "  -a, assign      Find assignments to this symbol"
    echo "  -h, help        Show this help message"
}

[ ! -x "$(command -v cscope)" ] && echo "This script requires cscope." && exit 2

if [ $# -eq 0 ] || [ "$1" = "help" ] || [ "$1" = "-h" ]; then
    usage
    exit 0
fi

[ $# -ne 2 ] && usage && exit 2

# Map commands and flags to cscope numeric options
case "$1" in
    symbol|-s)     option=0 ;;
    global|-g)     option=1 ;;
    calledby|-b)   option=2 ;;
    calling|-c)    option=3 ;;
    text|-t)       option=4 ;;
    change|-C)     option=5 ;;
    pattern|-p)    option=6 ;;
    file|-f)       option=7 ;;
    including|-i)  option=8 ;;
    assign|-a)     option=9 ;;
    *)             echo "Unknown command: $1"; usage; exit 2 ;;
esac

if [ "$winid" ]; then
    cscope -qR -L"$option" "$2" | awk '{ s = ""; for (i = 4; i <= NF; i++) s = s $i " "; print $1":"$3" "$2" " s }'| plumb -i -d edit -a 'action=showdata filename=+cscope'
else
    cscope -qR -L"$option" "$2" | awk '{ s = ""; for (i = 4; i <= NF; i++) s = s $i " "; print $1":"$3" "$2" " s }'
fi
exit 0